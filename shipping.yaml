- name: To configure shipping server 
  hosts: shipping 
  become: yes 
  tasks: 
  - name: Install maven 
    ansible.builtin.dnf:
     name: "{{ item }}"
     state: installed 
    loop:
    - maven 
    - mysql 

  - name: craete app directory 
    ansible.builtin.file: 
     path: /app
     state: directory 

  - name: create roboshop system user 
    ansible.builtin.user:
     name: roboshop 
     shell: /sbin/nologin 
     system: true 
     home: /app 

  - name: Download shipping code 
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
     dest: /tmp/shipping.zip

  - name: extract shipping code 
    ansible.builtin.unarchive:
     src: /tmp/shipping.zip
     dest: /app
     remote_src: yes 

  - name: install maven dependencies 
    ansible.builtin.command: mvn clean package 
    args:
     chdir: /app 

  - name: rename jar file 
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
     chdir: /app 

  - name: copy shipping service 
    ansible.builtin.copy: 
     src: shipping.service 
     dest: /etc/systemd/system/shipping.service

  - name: daemon reload 
    ansible.builtin.systemd_service:
     daemon_reload: true 

  - name: start and enable shipping service 
    ansible.builtin.service:
     name: shipping
     state: started 
     enabled: yes  
     
 # - name: connect to mysql using app user
 #   community.mysql.mysql_info:
 #     login_user: shipping
 #     login_password: RoboShop@1
 #     login_host: mysql.daws84s.site
 #     login_db: cities

  - name: import data
    tags:
    - import
    community.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.sivadevops.fun 
      state: import
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

  - name: restart shipping service 
    tags:
    - import
    ansible.builtin.service:
     name: shipping 
     state: restarted 

